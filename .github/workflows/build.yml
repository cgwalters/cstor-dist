name: 'Build + Push'

on:
  push:
    branches: [ 'main' ]
    tags: [ 'v*.*.*' ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }} # Sets image name to 'owner/repo'

jobs:
  # Build and Push Architecture-Specific Images
  build:
    name: Build on ${{ matrix.arch }}
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: amd64
            platform: linux/amd64
            runner: ubuntu-latest
          - arch: arm64
            platform: linux/arm64
            runner: ubuntu-24.04-arm
    
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # This generates tags like 'latest', 'v1.2.3', 'v1.2', 'v1'
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push arch-specific image
        uses: docker/build-push-action@v5
        with:
          context: .
          # Build and push only for the runner's native architecture
          platforms: ${{ matrix.platform }}
          # Push the image with a platform-specific suffix (e.g., '-amd64')
          tags: |
            ${{ steps.meta.outputs.tags }}-${{ matrix.arch }}
          labels: ${{ steps.meta.outputs.labels }}
          # Use the GHA cache for faster builds
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # Ensure the image is pushed
          push: true

  # Create and Push the Multi-Arch Manifest
  push-manifest:
    name: Push Multi-Arch Manifest
    runs-on: ubuntu-latest
    # This job depends on the successful completion of all jobs in the 'build' matrix
    needs: [build]
    # Only run this job for events that should trigger a push, not on PRs
    if: github.event_name != 'pull_request'

    permissions:
      packages: write

    steps:
      - name: Log in to the Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # Re-run metadata to get the same final tags (without the arch suffix)
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Create and push multi-arch manifest
        run: |
          # The 'tags' output from the metadata action can be multi-line, so we loop through it.
          for tag in ${{ steps.meta.outputs.tags }}; do
            echo "Processing tag: $tag"
            docker manifest create "$tag" \
              "${tag}-amd64" \
              "${tag}-arm64"
            docker manifest push "$tag"
          done